# Morphological Transducer for Sumerian

# Part of speech categories
# <n>      # Noun
# <v>      # Verb
# <adj>    # Adjective 
# <np>     # Proper name
# <pprs>   # Present participle
# <pp> 	   # Past participle
# <gen>    # Genitive
# <pr> 	   # Preposition
#  <sdef n="obj" 	c="Object"/>
#    <sdef n="subj" 	c="Subject"/>
#    <sdef n="pers" 	c="Personal (pronoun)"/>
#    <sdef n="pres" 	c="Present (tense)"/>
#    <sdef n="prn" 	c="Pronoun"/>
#    <sdef n="p1" 	c="First person"/>
#    <sdef n="p2" 	c="Second person"/>
#    <sdef n="p3" 	c="Third person"/>
#    <sdef n="sg" 	c="Singular"/>
#    <sdef n="pl" 	c="Plural"/>
#    <sdef n="sp" 	c="Singular / plural"/>
#    <sdef n="m" 	c="Masculine"/>
#    <sdef n="f" 	c="Feminine"/>
#    <sdef n="mf" 	c="Masculine / feminine"/>



# <sent>   # Sentence-ending punctuation
# <guio>   # Hyphen
# <cm>     # Comma
# <apos>   # Apostrophe
# <quot>   # Quotation mark
# <lquot>  # Left quotation mark
# <rquot>  # Right quotation mark
# <lpar>   # Left parenthesis
# <rpar>   # Right parenthesis

# Number morphology
# <pl>  # Plural
# <sg>  # Singular

# Other symbols
# >      # Morpheme boundary

###############################################################################
###                       M O R P H O T A C T I C S                         ###
###############################################################################


# 1. NOUN PATTERN
# a. nom is denoting if the noun will be singular or plural based on
#      I. if nothing attached it is singular
#      II. if repeataion of noun or if the last character us repeated with -e-ne or -ene
# b. affix is denoting the prepositions and geneatives
# -> different affixes denotes different prepositions(to,from, etc) which are added in the rules
# c. -e deontes it is a subject for a transitive verb



PATTERNS
NounRoot poss? number case?
NounRoot [<pl>:-] :NounRoot


LEXICON poss
<prn><poss><det><p1><mf><sg>:-gu10
<prn><poss><det><p2><mf><sg>:-zu
<prn><poss><det><p3><mf><sg>:-ni
<prn><poss><det><p3><nt><sg>:-bi
<prn><sub><det><p3><m><sg>:-am3
<prn><sub><det><p1><m><sg>:-me-en
<prn><sub><p1><mf><sg>:-ga2-e
<prn><sub><p1><mf><sg>:-ge26-e
<prn><sub><p2><mf><sg>:-za-e
<prn><sub><p2><mf><sg>:-ze2-e
<prn><sub><p3><mf><sg>:-e-ne
<prn><sub><p3><mf><sg>:-a-ne
<prn><sub><p3><nt><pl>:-e-ne-ne
<prn><sub><p3><nt><pl>:-a-ne-ne






LEXICON number
<pl>:-{redup}e-ne
<pl>:-ke-ne
<pl>:-ene
<sg>:


LEXICON case
<gen>:-{redup}a
<gen>:-a
<gen>:-bi
<gen>:-ni
<pr>:-a
<pr>:-ta
<pr>:-da
<pr>:-se3
<pr>:-gin7
<pr>:-ra   
<sub>:-e







#===============================================================================================================#
#### =================================================== VERBAL PATTERNS




# 2. verbal PATTERNS

# a. adjective like verbs and preset participles
PATTERNS
verbal_root_adj adj_affixes?

LEXICON adj_affixes
<pprs>:-{redup}a
<pp>:-{redup}a



# b. Verbal phrases
# Q. how to add the condition that if the right side of the lexicon apears than only take the morph of that ??
PATTERNS
:mod_pref? :conj_pref :case_elem :pronom_suf? :verbal_root :case_ending? verbal_root: case_elem: case_ending:?

LEXICON mod_pref
nu-


LEXICON conj_pref
mu-
bi2-
i3-
ba-


LEXICON case_elem
<prn><m><p1><past><sg>:
<prn><m><p2><past><sg>:e-
<prn><m><p3><past><sg>:un-
<prn><m><p3><past><sg>:{redup}n-
<prn><m><p3><past><sg>:{redup}b-
<prn><m><p1><pl>:me-
<prn><m><p2><sg>:ra-
<prn><m><p3><sg>:na-
<prn><m><p3><pl>:ne-
<prn><m><p3><past><sg>:da-
<prn><m><p3><past><sg>:ta-
<prn><m><p3><past><sg>:si-
<prn><m><p3><past><sg>:ni-


LEXICON pronom_suf
a-

LEXICON case_ending
<prn><sub><p1><m><sg><pres>:-en
<prn><sub><p2><m><sg><pres>:-en
<prn><sub><p1><m><sg>:-{redup}e-en
<prn><sub><p3><m><sg><pres>:-e
<prn><sub><p1><m><pl><pres>:-en-de3-en
<prn><sub><p2><m><pl><pres>:-en-ze2-en
<prn><sub><p3><mf><pl><prest>:-ne
<prn><sub><p1><m><pl><past>:-{redup}e-en-de3-en
<prn><sub><p2><m><pl><past>:-{redup}e-en-ze2-en
<prn><sub><p3><mf><pl><past>:-es










# =========================================================

# 2. Named Entity PATTERNS

PATTERNS 
Named_Entities




###############################################################################
###                          L E X I C O N                                  ###
###############################################################################



# 1. Simple and compund Nouns with basic patterns

LEXICON NounRoot
lugal<n>:lugal
digir<n>:digir
ama<n>:ama
nin<n>:nin
egal<n>:e2-gal
dubsar<n>:dub-sar
ursag<n>:ur-sag
e<n>:e2



# 2. Verb Roots

# adjective types
LEXICON verbal_root_adj
gal<vblex>:gal
tur<vblex>:tur
mah<vblex>:mah
gen<vblex>:gen
sum<vblex>:sum2



LEXICON verbal_root
du<vblex>:du3
ku<vblex>:ku3
gi<vblex>:gi4
g<vblex>:e3
dim<vblex>:dim2




# 3. Named Entities - All proper nouns which will be translated as it is in the target language
# Q. If Anything with {d},{ki} etc come than normalize those and put np tag

LEXICON Named_Entities
Dugrna<np>:du-gr\{d\}-na
Urutu<np>:ur-{d}utu
Luszara<np>:lu2-{d}szara2 
Inanna<np>:{d}inanna 
Luningirsu<np>:lu2-{d}nin-gir2-su






# punctuations if needed

LEXICON Punctuation

.<sent>:.
..<sent>:..
...<sent>:...
;<sent>:;
\:<sent>:\:
!<sent>:!
-<guio>:-
—<guio>:—
,<cm>:,
?<sent>:? 
'<apos>:'
"<quot>:"
«<lquot>:«
»<rquot>:»
”<rquot>:”
“<lquot>:“
(<lpar>:(
\]<rpar>:\]
\[<lpar>:\[
)<rpar>:)
\\<sent>:\\
\/<sent>:\/


# Resources:
# https://github.com/apertium/lexd/blob/master/Usage.md
# https://wiki.apertium.org/wiki/List_of_symbols
# http://wiki.apertium.org/wiki/Starting_a_new_language_with_HFST#Lexicon
# http://wiki.apertium.org/wiki/Lttoolbox_and_lexc
# http://wiki.apertium.org/wiki/Apertium-specific_conventions_for_lexc
# https://kitwiki.csc.fi/twiki/bin/view/KitWiki/HfstHome
# https://github.com/hfst/
# http://wiki.apertium.org/wiki/Hfst

